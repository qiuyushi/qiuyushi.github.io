{"version":3,"sources":["navItem.js","navBar.js","App.js","reportWebVitals.js","index.js"],"names":["NavItem","props","handleClick","bind","this","children","onClick","React","Component","NavBar","className","pages","map","item","i","App","useState","mainContent","mainUpdater","mainElt","id","style","height","window","innerHeight","width","innerWidth","page","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","appElt","addEventListener"],"mappings":"uPAqBeA,E,kDAlBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBAFF,E,+CAKnB,WACEC,KAAKH,MAAMC,YAAYE,KAAKH,MAAMI,Y,oBAGpC,WACE,OACE,oBAAIC,QAASF,KAAKF,YAAlB,SACGE,KAAKH,MAAMI,e,GAbEE,IAAMC,WCiBbC,MAhBf,SAAgBR,GACd,OACE,qBAAKS,UAAY,OAAjB,SACE,6BAEIT,EAAMU,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACZ,cAAC,EAAD,CAASZ,YAAaD,EAAMC,YAA5B,SACGW,GAD2CC,WCJtDH,EAAQ,CAAE,WAAY,WAAY,QA2EzBI,EAzEH,WAAK,MAEoBC,mBAAS,QAF7B,mBAERC,EAFQ,KAEKC,EAFL,KASXC,EAAU,KAqDd,OAjDEA,EAFiB,SAAhBF,EAGC,qBAAKP,UAAU,UAAf,SACE,sBAAKA,UAAY,YAAjB,UACE,sBAAMA,UAAY,QAAlB,4BAA+C,4BAK7B,aAAhBO,EAGN,qBAAKP,UAAU,UAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,qBAAKA,UAAU,SAAf,SACE,wDAGF,qBAAKA,UAAU,SAAf,SACE,2JAEA,uBACA,uBAHA,+MAOA,uBACA,uBARA,0MAYA,uBACA,uBAbA,8EAwBN,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SACA,uDAMJ,sBAAKU,GAAG,MACNC,MAAO,CAACC,OAA6B,IAArBC,OAAOC,YACvBC,MAAOF,OAAOG,YAFhB,UAGE,cAAC,EAAD,CAAQxB,YA9DQ,SAACyB,GACnBC,QAAQC,IAAIF,GACZT,EAAYS,IA4DwBhB,MAAOA,IAExCQ,MC/DQW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,eAG1B,IAAMC,EAASF,SAASC,eAAe,OACvCpB,OAAOsB,iBAAiB,UAAU,WAChCD,EAAOvB,MAAMI,MAAQF,OAAOG,WAC5BkB,EAAOvB,MAAMC,OAASC,OAAOC,eAM/BM,M","file":"static/js/main.eb7f1732.chunk.js","sourcesContent":["import React from 'react'\n\nclass NavItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleClick(this.props.children);\n  }\n\n  render() {\n    return(\n      <li onClick={this.handleClick}>\n        {this.props.children}\n      </li>\n    );\n  }\n};\n\nexport default NavItem;","import React from 'react'\nimport NavItem from './navItem';\n\nfunction NavBar(props) {\n  return(\n    <nav className = \"menu\">\n      <ul>\n        {\n          props.pages.map((item, i) => (\n              <NavItem handleClick={props.handleClick} key={i}>\n                {item}\n              </NavItem>)\n          )\n        }\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport './App.css';\nimport NavBar from './navBar'\n\n// this is the list of available pages on the website\nconst pages = [ 'Projects', 'About me', 'Home' ];\n\nconst App = () =>{\n  // use function hook\n  const [mainContent, mainUpdater] = useState('Home');\n\n  const handleClick = (page) => {\n    console.log(page);\n    mainUpdater(page);\n  };\n\n  let mainElt = null; // place hold for the main element\n\n  if(mainContent === 'Home') {\n    // the element will be the main page\n    mainElt = (\n      <div className=\"pic1 bg\">\n        <div className = \"title_box\">\n          <span className = \"title\">Hello! Welcome</span><br/>\n        </div>\n      </div>\n    );\n\n  } else if(mainContent === 'About me') {\n    // the element will be the about-me page\n    mainElt = (\n      <div className=\"pic3 bg\" >\n        <div className=\"txtBox container_flex\">\n          <div className=\"flex_4\">\n            <p>Pic to be uploaded...</p>\n          </div>\n\n          <div className=\"flex_6\">\n            <p>Hi, I'm Qiuyu Shi. I major in Computer Science at\n            University of Michigan and I'm pursuing a career as a Software Engineer. \n            <br/>\n            <br/>\n            I have a strong passion for Web Development. I enjoying coding and learning \n            new things. In addition to my personal website, I'm working on a person-growth\n            app that helps people keep track of their habits.\n            <br/>\n            <br/>\n            Also, I have a strong interest in robotics and have completed the\n            undergraduate robotic courses at my school. Currently, I'm working on a \n            project that put robotics and Web Development in conjunction.\n            <br/>\n            <br/>\n            Outside curriculum, I'm also a lover for photography and cooking.\n            </p>\n          </div>\n        </div>\n    </div>\n    );\n\n  } else {\n    // the element will be the projects page\n    mainElt = (\n      <div className=\"pic2 bg\">\n        <div className=\"txtBox\">\n        <p>to be completed...</p>\n        </div>\n      </div>);\n  }\n\n  return (\n    <div id='App' \n      style={{height: window.innerHeight * 1.2, \n      width: window.innerWidth}}>\n      <NavBar handleClick={handleClick} pages={pages}></NavBar>\n\n      {mainElt}\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('reactEntry')\n);\n\nconst appElt = document.getElementById('App');\nwindow.addEventListener('resize', () => {\n  appElt.style.width = window.innerWidth;\n  appElt.style.height = window.innerHeight;\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}